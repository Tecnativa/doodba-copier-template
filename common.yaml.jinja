{% import "_macros.jinja" as macros -%}
version: "2.4"

services:
  odoo:
    {%- if odoo_oci_image %}
    image: {{ odoo_oci_image }}:{{ macros.version_minor(odoo_version) }}
    {%- endif %}
    build:
      context: ./odoo
      args:
        ODOO_VERSION: "{{ macros.version_minor(odoo_version) }}"
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
    environment:
      EMAIL_FROM: "{{ smtp_default_from|default("", true) }}"
      PGDATABASE: &dbname {{ postgres_dbname }}
      PGUSER: &dbuser "{{ postgres_username }}"
      DB_FILTER: "{{ odoo_dbfilter }}"
      PROXY_MODE: "{{ (odoo_proxy is not none)|string|lower }}"
    {%- if smtp_canonical_default %}
    hostname: "{{ smtp_canonical_default }}"
    {%- endif %}
    tty: true
    volumes:
      - filestore:/var/lib/odoo:z
    {%- if odoo_proxy == "traefik" %}
    labels:
      traefik.backend.buffering.retryExpression: IsNetworkError() && Attempts() < 5
      traefik.docker.network: "inverseproxy_shared"
      traefik.frontend.passHostHeader: "true"
      traefik.port: "8069"
    {%- endif %}

  {% if postgres_version -%}
  db:
    image: ghcr.io/tecnativa/postgres-autoconf:{{ postgres_version }}-alpine
    shm_size: 512mb
    environment:
      POSTGRES_DB: *dbname
      POSTGRES_USER: *dbuser
      CONF_EXTRA: |
        work_mem = 512MB
    volumes:
      - db:/var/lib/postgresql/data:z
  {%- endif %}

  smtpfake:
    image: mailhog/mailhog
  {%- if smtp_relay_host %}

  smtpreal:
    image: ghcr.io/docker-mailserver/docker-mailserver:{{ smtp_relay_version }}
    domainname: "{{ smtp_canonical_default }}"
    stop_grace_period: 1m
    volumes:
      - mailconfig:/tmp/docker-mailserver:z
      - maildata:/var/mail:z
      - maillogs:/var/log/mail:z
      - maillogssupervisord:/var/log/supervisor:z
      - mailstate:/var/mail-state:z
    cap_add:
      - SYS_PTRACE
    environment:
      DEFAULT_RELAY_HOST: "[{{ smtp_relay_host }}]:{{ smtp_relay_port }}"
      DMS_DEBUG: 0
      ENABLE_SRS: 1
      ONE_DIR: 1
      PERMIT_DOCKER: connected-networks
      POSTFIX_INET_PROTOCOLS: ipv4
      POSTFIX_MESSAGE_SIZE_LIMIT: 52428800 # 50 MiB
      RELAY_HOST: "{{ smtp_relay_host }}"
      RELAY_PORT: "{{ smtp_relay_port }}"
      RELAY_USER: "{{ smtp_relay_user }}"
      SMTP_ONLY: 1
      SRS_DOMAINNAME: "{{ smtp_canonical_default }}"
      SRS_EXCLUDE_DOMAINS: "{{
          ([smtp_canonical_default] + (smtp_canonical_domains or []))
          |unique|sort|join(",")
      }}"
      SRS_SENDER_CLASSES: envelope_sender,header_sender
  {%- endif %}
  {%- if backup_dst %}

  backup:
    image: ghcr.io/tecnativa/docker-duplicity-postgres{% if backup_dst.startswith(('boto3+s3://', 's3://', 's3+http://')) %}-s3{% endif %}:{{ backup_image_version }}
    hostname: backup
    {%- if macros.first_main_domain(domains_prod) %}
    domainname: {{ macros.first_main_domain(domains_prod) }}
    {%- endif %}
    init: true
    environment:
      DST: "{{ backup_dst }}"
      {%- if smtp_relay_host %}
      EMAIL_FROM: "{{ backup_email_from }}"
      EMAIL_TO: "{{ backup_email_to }}"
      {%- endif %}
      {%- if backup_deletion %}
      JOB_500_WHAT: dup full $$SRC $$DST
      JOB_500_WHEN: weekly
      JOB_800_WHAT: dup --force remove-older-than 3M $$DST
      JOB_800_WHEN: weekly
      {%- endif %}
      PGDATABASE: *dbname
      PGUSER: *dbuser
      {%- if smtp_relay_host %}
      SMTP_HOST: smtplocal
      {%- endif %}
      TZ: "{{ backup_tz }}"
    volumes:
      - backup_cache:/root:z
      - filestore:/mnt/backup/src/odoo:z
  {%- endif %}
