{%- import "_macros.jinja" as macros -%}

{# Echo all domains of a group, in a Traefik rule #}
{%- macro domains_rule(hosts, path_prefixes=(), paths=()) -%}
  Host(`{{ hosts | join("`) || Host(`") }}`)
  {%- if path_prefixes or paths -%}
    {{" "}}&& (
      {%- if path_prefixes -%}
        {{ path_prefix_rule(path_prefixes) }}
        {%- if paths %} || {% endif %}
      {%- endif %}
      {%- if paths -%}
        {{ path_rule(paths) }}
      {%- endif -%}
      )
  {%- endif %}
{%- endmacro %}

{# Echo all path prefixes in a Traefik rule #}
{%- macro path_prefix_rule(path_prefixes) -%}
  {%- for path in path_prefixes -%}
    {%- if path.endswith("/") -%}
      PathPrefix(`{{ path }}`)
    {%- else -%}
      PathPrefix(`{{ path }}`) || Path(`{{ path }}`)
    {%- endif -%}
    {%- if not loop.last %} || {% endif %}
  {%- endfor %}
{%- endmacro %}

{# Echo all paths in a Traefik rule #}
{%- macro path_rule(paths) -%}
  {%- for path in paths -%}
    Path(`{{ path }}`)
    {%- if not loop.last %} || {% endif %}
  {%- endfor %}
{%- endmacro %}

{%- macro odoo(domain_groups_list, paths_without_crawlers, odoo_version, traefik_version) %}
      traefik.domain: {{ macros.first_main_domain(domain_groups_list)|tojson }}
      {%- call(domain_group) macros.domains_loop_grouped(domain_groups_list) %}

      {#- Route redirections #}
      {%- if domain_group.redirect_to %}
      traefik.http.middlewares.redirect-to-{{ domain_group.loop.index0 }}.redirectregex.regex: ^(.*)://([^/]+)/(.*)$$
      traefik.http.middlewares.redirect-to-{{ domain_group.loop.index0 }}.redirectregex.replacement: $$1://{{ domain_group.redirect_to }}/$$3
      traefik.http.routers.alt-{{ domain_group.loop.index0 }}.middlewares: redirect-to-{{ domain_group.loop.index0 }}
      {{-
        router(
          prefix="alt",
          index0=domain_group.loop.index0,
          rule=domains_rule(domain_group.hosts, domain_group.path_prefixes),
          entrypoints=domain_group.entrypoints
        )
      }}
      {%- else -%}
      {%- if paths_without_crawlers and not domain_group.path_prefixes %}
      {{-
        router(
          prefix="forbiddenCrawlers",
          index0=domain_group.loop.index0,
          rule=domains_rule(domain_group.hosts, paths_without_crawlers),
          entrypoints=domain_group.entrypoints,
          middlewares=["forbiddenCrawlers-" ~ domain_group.loop.index0]        )
      }}
      traefik.http.middlewares.forbiddenCrawlers-{{ domain_group.loop.index0 }}.headers.customResponseHeadersX-Robots-Tag:
        "noindex, nofollow"
      {%- endif %}

      {#- Normal routers #}
      {%- if paths_without_crawlers != ["/"] or domain_group.path_prefixes %}
      {{-
        router(
          prefix="main",
          index0=domain_group.loop.index0,
          rule=domains_rule(domain_group.hosts, domain_group.path_prefixes),
          entrypoints=domain_group.entrypoints
        )
      }}
      {%- endif %}
      {%- if not domain_group.path_prefixes %}
      {%- set longpolling_route = "/longpolling/" if odoo_version < 16 else "/websocket" -%}
      {{-
        router(
          prefix="longpolling",
          index0=domain_group.loop.index0,
          rule=domains_rule(domain_group.hosts, [longpolling_route]),
          entrypoints=domain_group.entrypoints,
          port=8072
        )
      }}
      {%- endif %}
      {%- endif %}
      {%- endcall %}
{%- endmacro %}

{#- Basic labels for a single router #}
{%- macro router(prefix, index0, rule, entrypoints=(), middlewares=(), port=none) %}
      traefik.http.routers.{{ prefix }}-{{ index0 }}.rule:
        {{ rule }}
      {%- if entrypoints %}
      traefik.http.routers.{{ prefix }}-{{ index0 }}.entryPoints:
        "{{ entrypoints | join(',') }}"
      {%- endif %}
      {%- if middlewares %}
      traefik.http.routers.{{ prefix }}-{{ index0 }}.middlewares:
        "{{ middlewares | join(',') }}"
      {%- endif %}
      {%- if port %}
      traefik.http.services.{{ prefix }}-{{ index0 }}.loadbalancer.server.port: {{ port }}
      {%- endif %}
{%- endmacro %}
