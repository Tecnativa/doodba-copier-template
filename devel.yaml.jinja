{%- import "_macros.jinja" as macros -%}
version: "2.4"

services:
  odoo_proxy:
    image: tecnativa/whitelist
    depends_on:
      - odoo
    networks: &public
      default:
      public:
    ports:
      - "127.0.0.1:6899:6899"
      - "127.0.0.1:{{ macros.version_major(odoo_version) }}069:8069"
    environment:
      PORT: "6899 8069"
      TARGET: odoo

  odoo:
    extends:
      file: common.yaml
      service: odoo
    build:
      args:
        # To aggregate in development, use `setup-devel.yaml`
        AGGREGATE: "false"
        # Export these variables to own files created by odoo in your filesystem
        UID: "${UID:-1000}"
        GID: "${GID:-1000}"
        # No need for this in development
        PIP_INSTALL_ODOO: "false"
        CLEAN: "false"
        COMPILE: "false"
    environment:
      DOODBA_ENVIRONMENT: "${DOODBA_ENVIRONMENT-devel}"
      LIST_DB: "true"
      PTVSD_ENABLE: "${DOODBA_PTVSD_ENABLE:-0}"
      PGDATABASE: &dbname devel
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONOPTIMIZE: ""
      PYTHONPATH: /opt/odoo/custom/src/odoo
      SMTP_PORT: "1025"
      # To avoid installing demo data export DOODBA_WITHOUT_DEMO=all
      WITHOUT_DEMO: "${DOODBA_WITHOUT_DEMO-false}"
    volumes:
      - ./odoo/custom:/opt/odoo/custom:ro,z
      - ./odoo/auto:/opt/odoo/auto:rw,z
    depends_on:
      - cdnjs_cloudflare_proxy
      - db
      - fonts_googleapis_proxy
      - fonts_gstatic_proxy
      - google_proxy
      - gravatar_proxy
      - smtp
      - wdb
    command:
      - odoo
      - --limit-memory-soft=0
      {%- if odoo_version >= 10 %}
      - --limit-time-real-cron=9999999
      {%- endif %}
      - --limit-time-real=9999999
      - --workers=0
      {%- if odoo_version == 9 %}
      - --dev
      {%- elif odoo_version >= 10 %}
      - --dev=reload,qweb,werkzeug,xml
      {%- endif %}

  db:
    extends:
      file: common.yaml
      service: db
    environment:
      POSTGRES_DB: *dbname
      POSTGRES_PASSWORD: odoopassword

  pgweb:
    image: sosedoff/pgweb
    networks: *public
    ports:
      - "127.0.0.1:8081:8081"
    environment:
      DATABASE_URL: postgres://{{ postgres_username }}:odoopassword@db:5432/devel?sslmode=disable
    depends_on:
      - db

  smtp:
    extends:
      file: common.yaml
      service: smtpfake
    networks: *public
    ports:
      - "127.0.0.1:8025:8025"

  wdb:
    image: kozea/wdb
    networks: *public
    ports:
      - "127.0.0.1:1984:1984"
    # HACK https://github.com/Kozea/wdb/issues/136
    init: true

  # Whitelist outgoing traffic for tests, reports, etc.
  cdnjs_cloudflare_proxy:
    image: tecnativa/whitelist
    networks:
      default:
        aliases:
          - cdnjs.cloudflare.com
      public:
    environment:
      TARGET: cdnjs.cloudflare.com
      PRE_RESOLVE: 1

  fonts_googleapis_proxy:
    image: tecnativa/whitelist
    networks:
      default:
        aliases:
          - fonts.googleapis.com
      public:
    environment:
      TARGET: fonts.googleapis.com
      PRE_RESOLVE: 1

  fonts_gstatic_proxy:
    image: tecnativa/whitelist
    networks:
      default:
        aliases:
          - fonts.gstatic.com
      public:
    environment:
      TARGET: fonts.gstatic.com
      PRE_RESOLVE: 1

  google_proxy:
    image: tecnativa/whitelist
    networks:
      default:
        aliases:
          - www.google.com
      public:
    environment:
      TARGET: www.google.com
      PRE_RESOLVE: 1

  gravatar_proxy:
    image: tecnativa/whitelist
    networks:
      default:
        aliases:
          - www.gravatar.com
      public:
    environment:
      TARGET: www.gravatar.com
      PRE_RESOLVE: 1

networks:
  default:
    internal: true
  public:

volumes:
  filestore:
  db:
