version: "2.4"

services:
  odoo:
    extends:
      file: common.yaml
      service: odoo
    restart: unless-stopped
    env_file:
      - .docker/odoo.env
      - .docker/db-access.env
    environment:
      DOODBA_ENVIRONMENT: "${DOODBA_ENVIRONMENT-prod}"
      INITIAL_LANG: "$INITIAL_LANG"
      {%- if smtp_relay_host %}
      SMTP_SERVER: smtplocal
      {%- endif %}
    depends_on:
      - db
      {%- if smtp_relay_host %}
      - smtp
      {%- endif %}
    networks:
      default:
    {%- if odoo_proxy == "traefik" %}
      inverseproxy_shared:
    labels:
      traefik.longpolling.frontend.rule: "Host:${DOMAIN_PROD};PathPrefix:/longpolling/"
      traefik.www.frontend.rule: "Host:${DOMAIN_PROD}"
      {%- if domain_prod_alternatives %}
      {%- for domain in domain_prod_alternatives %}
      traefik.alt-{{ loop.index0 }}.frontend.redirect.regex: "^(.*)://${DOMAIN_PROD_ALT_{{ loop.index0 }}}/(.*)$$"
      traefik.alt-{{ loop.index0 }}.frontend.redirect.replacement: "$$1://${DOMAIN_PROD}/$$2"
      traefik.alt-{{ loop.index0 }}.frontend.rule: "Host:${DOMAIN_PROD_ALT_{{ loop.index0 }}}"
      {%- endfor %}
      {%- endif %}
    {%- endif %}

  db:
    extends:
      file: common.yaml
      service: db
    env_file:
      - .docker/db-creation.env
    restart: unless-stopped
  {%- if smtp_relay_host %}

  smtp:
    image: tvial/docker-mailserver:latest
    networks:
      default:
        aliases:
          - smtplocal
    restart: unless-stopped
    domainname: "$SMTP_REAL_MAILNAME"
    stop_grace_period: 1m
    volumes:
      - mailconfig:/tmp/docker-mailserver:z
      - maildata:/var/mail:z
      - maillogs:/var/log/mail:z
      - maillogssupervisord:/var/log/supervisor:z
      - mailstate:/var/mail-state:z
    cap_add:
      - SYS_PTRACE
    env_file:
      - .docker/smtp.env
    environment:
      DEFAULT_RELAY_HOST: "[$SMTP_REAL_RELAY_HOST]:$SMTP_REAL_RELAY_PORT"
      DMS_DEBUG: 0
      ENABLE_SRS: 1
      ONE_DIR: 1
      PERMIT_DOCKER: connected-networks
      POSTFIX_MESSAGE_SIZE_LIMIT: 52428800 # 50 MiB
      RELAY_HOST: "$SMTP_REAL_RELAY_HOST"
      RELAY_PORT: "$SMTP_REAL_RELAY_PORT"
      RELAY_USER: "$SMTP_REAL_RELAY_USER"
      SMTP_ONLY: 1
      SRS_DOMAINNAME: "$SMTP_REAL_NON_CANONICAL_DEFAULT"
      SRS_EXCLUDE_DOMAINS: "$SMTP_REAL_CANONICAL_DOMAINS"
      SRS_SENDER_CLASSES: envelope_sender,header_sender
  {%- endif %}
  {%- if backup_dst %}

  backup:
    image: tecnativa/duplicity:postgres-s3
    hostname: backup
    domainname: "$DOMAIN_PROD"
    init: true
    volumes:
      - backup_cache:/root:z
      - filestore:/mnt/backup/src/odoo:z
    restart: unless-stopped
    depends_on:
      - db
      {%- if smtp_relay_host %}
      - smtp
      {%- endif %}
    env_file:
      - .docker/backup.env
      - .docker/db-access.env
    environment:
      DST: "s3://s3.amazonaws.com/$BACKUP_S3_BUCKET"
      {%- if smtp_relay_host %}
      EMAIL_FROM: "$BACKUP_EMAIL_FROM"
      EMAIL_TO: "$BACKUP_EMAIL_TO"
      {%- endif %}
      PGDATABASE: {{ postgres_dbname }}
      PGUSER: {{ postgres_username }}
      {%- if smtp_relay_host %}
      SMTP_HOST: smtplocal
      {%- endif %}
      TZ: {{ backup_tz }}
  {%- endif %}

networks:
  default:
    driver_opts:
      encrypted: 1

  inverseproxy_shared:
    external: true

volumes:
  {%- if backup_dst %}
  backup_cache:
  {%- endif %}
  filestore:
  db:
  {%- if smtp_relay_host %}
  mailconfig:
  maildata:
  maillogs:
  maillogssupervisord:
  mailstate:
  {%- endif %}
