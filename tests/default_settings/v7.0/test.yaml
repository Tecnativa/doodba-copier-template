version: "2.4"

services:
  odoo:
    extends:
      file: common.yaml
      service: odoo
    env_file:
      - .docker/odoo.env
      - .docker/db-access.env
    environment:
      DOODBA_ENVIRONMENT: "${DOODBA_ENVIRONMENT-test}"
      # To install demo data export DOODBA_WITHOUT_DEMO=false
      WITHOUT_DEMO: "${DOODBA_WITHOUT_DEMO-all}"
      SMTP_PORT: "1025"
      SMTP_SERVER: smtplocal
    restart: unless-stopped
    depends_on:
      - db
      - smtp
    networks:
      default:
      globalwhitelist_shared:
      inverseproxy_shared:
    labels:
      traefik.frontend.headers.customResponseHeaders: "X-Robots-Tag:noindex, nofollow"
      traefik.longpolling.frontend.rule: "Host:${DOMAIN_TEST};PathPrefix:/longpolling/"
      traefik.www.frontend.rule: "Host:${DOMAIN_TEST}"
      # Forbid crawlers
      ? traefik.http.middlewares.myproject-odoo-7-0-test-forbid-crawlers.headers.customResponseHeaders.X-Robots-Tag
      : noindex, nofollow
      # Main service
      ? traefik.http.middlewares.myproject-odoo-7-0-test-buffering.buffering.retryExpression
      : IsNetworkError() && Attempts() < 5
      traefik.http.middlewares.myproject-odoo-7-0-test-compress.compress: "true"
      traefik.http.routers.myproject-odoo-7-0-test-main.entrypoints: "web-main"
      traefik.http.routers.myproject-odoo-7-0-test-main.middlewares:
        myproject-odoo-7-0-test-buffering, myproject-odoo-7-0-test-compress,
        myproject-odoo-7-0-test-forbid-crawlers
      traefik.http.routers.myproject-odoo-7-0-test-main.rule: "host(`${DOMAIN_TEST}`)"
      traefik.http.routers.myproject-odoo-7-0-test-main.service: "myproject-odoo-7-0-test-main"
      traefik.http.routers.myproject-odoo-7-0-test-main.tls.certresolver: "letsencrypt"
      traefik.http.services.myproject-odoo-7-0-test-main.loadbalancer.server.port: 8069
      # Longpolling service
      traefik.http.routers.myproject-odoo-7-0-test-longpolling.entrypoints: "web-main"
      traefik.http.routers.myproject-odoo-7-0-test-longpolling.middlewares: myproject-odoo-7-0-test-forbid-crawlers
      traefik.http.routers.myproject-odoo-7-0-test-longpolling.rule:
        "host(`${DOMAIN_TEST}`) && pathprefix(`/longpolling/`)"
      traefik.http.routers.myproject-odoo-7-0-test-longpolling.service: "myproject-odoo-7-0-test-longpolling"
      traefik.http.routers.myproject-odoo-7-0-test-longpolling.tls: "true"
      traefik.http.routers.myproject-odoo-7-0-test-longpolling.tls.certresolver: "letsencrypt"
      traefik.http.services.myproject-odoo-7-0-test-longpolling.loadbalancer.server.port: 8072
    command:
      - odoo
      - --workers=2
      - --max-cron-threads=1

  db:
    extends:
      file: common.yaml
      service: db
    env_file:
      - .docker/db-creation.env
    restart: unless-stopped

  smtp:
    extends:
      file: common.yaml
      service: smtpfake
    restart: unless-stopped
    networks:
      default:
        aliases:
          - smtplocal
      inverseproxy_shared:
    labels:
      traefik.docker.network: "inverseproxy_shared"
      traefik.enable: "true"
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.rule: "Host:${DOMAIN_TEST};PathPrefixStrip:/smtpfake/"
      traefik.port: "8025"
      # Mailhog service
      traefik.http.middlewares.myproject-odoo-7-0-test-mailhog-stripprefix.stripPrefix.prefixes: /smtpfake
      traefik.http.routers.myproject-odoo-7-0-test-mailhog.entrypoints: web-main
      traefik.http.routers.myproject-odoo-7-0-test-mailhog.middlewares:
        myproject-odoo-7-0-test-buffering, myproject-odoo-7-0-test-compress,
        myproject-odoo-7-0-test-forbid-crawlers,
        myproject-odoo-7-0-test-mailhog-stripprefix
      traefik.http.routers.myproject-odoo-7-0-test-mailhog.rule:
        Host(`${DOMAIN_TEST}`) && PathPrefix(`/smtpfake/`)
      traefik.http.routers.myproject-odoo-7-0-test-mailhog.service: myproject-odoo-7-0-test-mailhog
      traefik.http.routers.myproject-odoo-7-0-test-mailhog.tls.certresolver: letsencrypt
      traefik.http.services.myproject-odoo-7-0-test-mailhog.loadbalancer.server.port: 8025
    volumes:
      - "smtpconf:/etc/mailhog:ro,z"
    entrypoint: [sh, -c]
    command:
      - test -r /etc/mailhog/auth && export MH_AUTH_FILE=/etc/mailhog/auth; exec MailHog

networks:
  default:
    internal: true
    driver_opts:
      encrypted: 1

  globalwhitelist_shared:
    external: true

  inverseproxy_shared:
    external: true

volumes:
  filestore:
  db:
  smtpconf:
