{% set _key = '%s-%.1f-test'|format(project_name, odoo_version)|replace('.', '-') -%}
version: "2.4"

services:
  odoo:
    extends:
      file: common.yaml
      service: odoo
    env_file:
      - .docker/odoo.env
      - .docker/db-access.env
    environment:
      DOODBA_ENVIRONMENT: "${DOODBA_ENVIRONMENT-test}"
      # To install demo data export DOODBA_WITHOUT_DEMO=false
      WITHOUT_DEMO: "${DOODBA_WITHOUT_DEMO-all}"
      SMTP_PORT: "1025"
      SMTP_SERVER: smtplocal
    restart: unless-stopped
    depends_on:
      - db
      - smtp
    networks:
      default:
      globalwhitelist_shared:
    {%- if odoo_proxy == "traefik" %}
      inverseproxy_shared:
    labels:
      traefik.frontend.headers.customResponseHeaders: "X-Robots-Tag:noindex, nofollow"
      traefik.longpolling.frontend.rule: "Host:${DOMAIN_TEST};PathPrefix:/longpolling/"
      traefik.www.frontend.rule: "Host:${DOMAIN_TEST}"
      # Forbid crawlers
      traefik.http.middlewares.{{ _key }}-forbid-crawlers.headers.customResponseHeaders.X-Robots-Tag:
        noindex, nofollow
      # Main service
      traefik.http.middlewares.{{ _key }}-buffering.buffering.retryExpression:
        IsNetworkError() && Attempts() < 5
      traefik.http.middlewares.{{ _key }}-compress.compress: "true"
      {%- if cidr_whitelist %}
      ? traefik.http.middlewares.{{ _key }}-whitelist.IPWhiteList.sourceRange
      : {% for cidr in cidr_whitelist -%}
        {{ cidr }}{% if not loop.last %}, {% endif %}
        {%- endfor %}
      {%- endif %}
      traefik.http.routers.{{ _key }}-main.entrypoints: "web-main"
      traefik.http.routers.{{ _key }}-main.middlewares:
        {{ _key }}-buffering,
        {{ _key }}-compress,
        {{ _key }}-forbid-crawlers
        {%- if cidr_whitelist %}, {{ _key }}-whitelist{% endif %}
      traefik.http.routers.{{ _key }}-main.rule: "host(`${DOMAIN_TEST}`)"
      traefik.http.routers.{{ _key }}-main.service: "{{ _key }}-main"
      traefik.http.routers.{{ _key }}-main.tls.certresolver: "letsencrypt"
      traefik.http.services.{{ _key }}-main.loadbalancer.server.port: 8069
      # Longpolling service
      traefik.http.routers.{{ _key }}-longpolling.entrypoints: "web-main"
      traefik.http.routers.{{ _key }}-longpolling.middlewares:
        {{ _key }}-forbid-crawlers
        {%- if cidr_whitelist %}, {{ _key }}-whitelist{% endif %}
      traefik.http.routers.{{ _key }}-longpolling.rule:
        "host(`${DOMAIN_TEST}`) && pathprefix(`/longpolling/`)"
      traefik.http.routers.{{ _key }}-longpolling.service: "{{ _key }}-longpolling"
      traefik.http.routers.{{ _key }}-longpolling.tls: "true"
      traefik.http.routers.{{ _key }}-longpolling.tls.certresolver: "letsencrypt"
      traefik.http.services.{{ _key }}-longpolling.loadbalancer.server.port: 8072
    {%- endif %}
    command:
      - odoo
      - --workers=2
      - --max-cron-threads=1

  db:
    extends:
      file: common.yaml
      service: db
    env_file:
      - .docker/db-creation.env
    restart: unless-stopped

  smtp:
    extends:
      file: common.yaml
      service: smtpfake
    restart: unless-stopped
    networks:
      default:
        aliases:
          - smtplocal
    {%- if odoo_proxy == "traefik" %}
      inverseproxy_shared:
    labels:
      traefik.docker.network: "inverseproxy_shared"
      traefik.enable: "true"
      traefik.frontend.passHostHeader: "true"
      traefik.frontend.rule: "Host:${DOMAIN_TEST};PathPrefixStrip:/smtpfake/"
      traefik.port: "8025"
      # Mailhog service
      traefik.http.middlewares.{{ _key }}-mailhog-stripprefix.stripPrefix.prefixes: /smtpfake
      traefik.http.routers.{{ _key }}-mailhog.entrypoints: web-main
      traefik.http.routers.{{ _key }}-mailhog.middlewares:
        {{ _key }}-buffering,
        {{ _key }}-compress,
        {{ _key }}-forbid-crawlers,
        {{ _key }}-mailhog-stripprefix
        {%- if cidr_whitelist %}, {{ _key }}-whitelist{% endif %}
      traefik.http.routers.{{ _key }}-mailhog.rule: Host(`${DOMAIN_TEST}`) && PathPrefix(`/smtpfake/`)
      traefik.http.routers.{{ _key }}-mailhog.service: {{ _key }}-mailhog
      traefik.http.routers.{{ _key }}-mailhog.tls.certresolver: letsencrypt
      traefik.http.services.{{ _key }}-mailhog.loadbalancer.server.port: 8025
    {%- endif %}
    volumes:
      - "smtpconf:/etc/mailhog:ro,z"
    entrypoint: [sh, -c]
    command:
      - test -r /etc/mailhog/auth && export MH_AUTH_FILE=/etc/mailhog/auth; exec MailHog

networks:
  default:
    internal: true
    driver_opts:
      encrypted: 1

  globalwhitelist_shared:
    external: true
  {%- if odoo_proxy == "traefik" %}

  inverseproxy_shared:
    external: true
  {%- endif %}

volumes:
  filestore:
  db:
  smtpconf:
